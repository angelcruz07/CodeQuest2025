---
import Heading from "../heading/Heading.astro";
import Comment from "./Comment.astro";
import { CommentForm } from "./CommentForm";
import { actions } from "astro:actions";

interface Props {
  postId: string;
}

const { postId } = Astro.props;

const { data } = await Astro.callAction(actions.comment.getCommentsByPostId, {
  postId: postId,
});

console.log(data);

const comments = [
  {
    id: 1,
    author: "Ana G.",
    content: "¡Excelente artículo! Me sirvió mucho para mi proyecto.",
    createdAt: "2025-09-20 02:42:34.017",
  },
  {
    id: 2,
    author: "Pedro L.",
    content:
      "Muy bien explicado, pero me gustaría ver un ejemplo más complejo.",
    createdAt: "2025-09-20 02:42:34.017",
  },
  {
    id: 3,
    author: "María P.",
    content: "Tengo una duda con el segundo paso, ¿podrían aclararlo?",
    createdAt: "2025-09-20 02:42:34.017",
  },
  {
    id: 4,
    author: "Carlos R.",
    content: "¡Gracias por compartir!",
    createdAt: "2025-09-20 02:42:34.017",
  },
];

const totalComments = comments.length;
---

<section class="mt-10">
  <article class="border-accent border-y py-10">
    <Heading component="h2" fontSize="medium">
      Comentarios {totalComments > 0 ? `(${totalComments})` : ""}
    </Heading>

    <div class="">
      {
        comments.length === 0 ? (
          <p class="content-sm mt-5">
            No hay comentarios aún. Sé el primero en comentar.
          </p>
        ) : (
          <div class="mt-5 space-y-5">
            {comments.map((comment) => (
              <Comment comment={comment} />
            ))}
          </div>
        )
      }
    </div>
  </article>

  <div class="mt-5">
    <Heading component="h3" fontSize="medium" className="mb-3">
      Dejar un comentario
    </Heading>
    <CommentForm load:client />
  </div>
</section>
