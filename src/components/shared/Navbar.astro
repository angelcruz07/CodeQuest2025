---
import { Image } from "astro:assets";
import Link from "../link/Link.astro";
import Text from "../text/Text.astro";
import X from "@icons/x.svg";
import Menu from "@icons/menu.svg";
import Button from "../button/Button.astro";
import { ROUTES_NAV } from "@const";
import AuthButtonNav from "@components/auth/AuthButtonNav.astro";

const { user } = Astro.locals;
---

<header
  class="bg-complementary fixed top-0 z-50 flex h-20 w-full shadow-md duration-300"
  id="main-header"
>
  <nav class="container flex items-center justify-between">
    <Link href="/">
      <Image
        src="/logos/logo-b.png"
        width={150}
        height={30}
        alt="Logo devtalles"
        loading="eager"
      />
    </Link>

    <div class="hidden md:block">
      <div class="flex items-center space-x-8">
        {
          ROUTES_NAV.map((route) => {
            return (
              <Link href={route.path} colorScheme="accent">
                {route.name.toUpperCase()}
              </Link>
            );
          })
        }
      </div>
    </div>

    <AuthButtonNav user={user} client:load />

    <button
      id="open-menu-button"
      name="Abrir menu"
      class="cursor-pointer text-white md:hidden"
    >
      <Menu width={30} height={30} />
    </button>

    <button
      id="close-menu-button"
      class="cursor-pointer text-white md:hidden"
      type="button"
    >
      <X width={30} height={30} />
    </button>
  </nav>

  <dialog
    id="mobile-menu"
    role="dialog"
    aria-modal="true"
    class="bg-complementary top-20 z-50 size-full h-96 max-w-full translate-x-0 text-white transition-discrete duration-300 lg:hidden starting:-translate-y-full [&:not([open])]:-translate-x-full"
  >
    <div class="flex flex-col items-center justify-between gap-y-8 px-5">
      <div class="mb-5 flex flex-col items-center">
        {
          ROUTES_NAV.map((navLink) => {
            return (
              <Link href={navLink.path} colorScheme="accent">
                {navLink.name}
              </Link>
            );
          })
        }
      </div>
    </div>
  </dialog>
</header>

<script>
  import { $ } from "@lib/dom-selector";
  const mobileMenu = $("#mobile-menu") as HTMLDialogElement;
  const openMenuButton = $("#open-menu-button");
  const closeMenuButton = $("#close-menu-button");

  const toggleMenu = () => {
    if (mobileMenu.open) {
      mobileMenu.close();
      openMenuButton?.classList.remove("hidden");
      closeMenuButton?.classList.add("hidden");
    } else {
      mobileMenu.showModal();
      openMenuButton?.classList.add("hidden");
      closeMenuButton?.classList.remove("hidden");
    }
  };

  openMenuButton?.addEventListener("click", toggleMenu);
  closeMenuButton?.addEventListener("click", toggleMenu);
</script>
